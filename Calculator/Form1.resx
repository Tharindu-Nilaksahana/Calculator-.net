<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="txtanswer.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAgICFwQEBBoEBAQaBAQEGgQEBBoEBAQaBAQEGgQE
        BBoEBAQaBAQEGgQEBBoEBAQaBAQEGgQEBBoEBAQaBAQEGgQEBBoDAwMaAAAAGQAAAA0AAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjY2NjB/f3/lhoaG/4eHh/+Hh4f/h4eH/4eH
        h/+Hh4f/h4eH/4eHh/+Hh4f/iIiI/4mJif+Li4v/jY2N/46Ojv+Ojo7/ioqK/4SEhP9TU1PmAAAARgAA
        AAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABY2NjH7q6uv/IyMj/yMjI/8jI
        yP/IyMj/yMjI/8jIyP/IyMj/yMjI/8nJyf/Ly8v/zc3N/9DQ0P/U1NT/1tbW/9bW1v/Q0ND/wsLC/4+P
        j/8AAAAuAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABubm4CyMjI/9PT
        0//T09P/1NTU/9XV1f/U1NT/09PT/9TU1P/V1dX/1NTU/9bW1v/Z2dn/3d3d/+Hh4f/j4+P/4uLi/9zc
        3P/Q0ND/nZ2d/wAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWl
        pQDNzc3/Ozs7/3BwcP87Ozv/1dXV/zs7O/9ERET/Ozs7/9TU1P89PT3/U1NT/z4+Pv/e3t7/4eHh/zc3
        N/8wMDD/NjY2/9PT0/+mpqb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuLi4ANDQ0P9GRkb/c3Nz/0ZGRv/W1tb/RkZG/0FBQf9GRkb/1tbW/0dHR/9eXl7/SEhI/97e
        3v/i4uL/KCgo/y4uLv8oKCj/1dXV/6qqqv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC6uroA09PT/9vb2//Z2dn/19fX/9jY2P/X19f/1tbW/9fX1//Y2Nj/19fX/9jY
        2P/b29v/4ODg/+Pj4/8wMDD/YmJi/zExMf/W1tb/rKys/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAALq6ugDU1NT/PDw8/2NjY/88PDz/2NjY/zw8PP9oaGj/PDw8/9fX
        1/87Ozv/aGho/zw8PP/g4OD/5OTk/zU1Nf81NTX/NTU1/9jY2P+tra3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu7u7ANXV1f9GRkb/ZGRk/0ZGRv/a2tr/RkZG/2tr
        a/9GRkb/2dnZ/0ZGRv9tbW3/RkZG/+Dg4P/k5OT/UFBQ/0tLS/9QUFD/2dnZ/62trf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7u7sA1tbW/+Li4v/i4uL/3t7e/9zc
        3P/a2tr/2tra/9ra2v/b29v/2tra/9ra2v/d3d3/4uLi/+Xl5f/n5+f/6Ojo/+Xl5f/b29v/r6+v/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJycnADW1tb/Pj4+/3Nz
        c/8+Pj7/3Nzc/zw8PP9kZGT/PDw8/9vb2/88PDz/eHh4/z09Pf/h4eH/5eXl/z09Pf9SUlL/PDw8/9vb
        2/+vr6//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfX19ANfX
        1/9GRkb/a2tr/0ZGRv/f39//RkZG/3Z2dv9GRkb/3Nzc/0ZGRv93d3f/RkZG/+Pj4//m5ub/RkZG/0FB
        Qf9GRkb/3d3d/7Gxsf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAB9fX0A2NjY/+Xl5f/q6ur/6Ojo/+Pj4//e3t7/3d3d/97e3v/f39//3t7e/93d3f/f39//4+Pj/+fn
        5//p6en/6urq/+jo6P/e3t7/srKy/w8PDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAH5+fgDZ2dn/PDw8/1NTU/89PT3/5OTk/zw8PP97e3v/PT09/97e3v88PDz/cnJy/z09
        Pf/j4+P/5+fn/z09Pf9aWlr/PT09/9/f3/+zs7P/Pz8/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgICAANra2v9GRkb/bm5u/0dHR//o6Oj/RkZG/3t7e/9GRkb/4ODg/0ZG
        Rv96enr/RkZG/+Tk5P/o6Oj/RkZG/2JiYv9GRkb/4ODg/7W1tf8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBgYEA29vb/+jo6P/u7u7/7+/v/+vr6//l5eX/4uLi/+Li
        4v/i4uL/4uLi/+Li4v/i4uL/5OTk/+jo6P/r6+v/7e3t/+vr6//h4eH/tra2/z8/PwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIODgwDc3Nz/5+fn/+3t7f/w8PD/7e3t/+fn
        5//j4+P/4uLi/+Pj4//i4uL/4uLi/+Li4v/l5eX/6enp/+vr6//t7e3/7Ozs/+Pj4/+4uLj/Pz8/AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhISEANzc3P9ISEj/RERE/0dH
        R//u7u7/Tk5O/0pKSv9HR0f/4uLi/0RERP9FRUX/RERE/+Xl5f/o6Oj/PT09/zs7O/89PT3/4+Pj/7q6
        uv8/Pz8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGhoYA3d3d/19f
        X/9qamr/WVlZ//Dw8P9lZWX/ZWVl/0ZGRv/k5OT/Wlpa/2tra/9OTk7/5ubm/+np6f9HR0f/YmJi/0hI
        SP/k5OT/vLy8/z8/PwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIeH
        hwDf39//6enp/+3t7f/x8fH/8fHx/+3t7f/o6Oj/5ubm/+fn5//m5ub/5eXl/+bm5v/n5+f/6enp/+zs
        7P/u7u7/7u7u/+bm5v++vr7/Pz8/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAiYmJAN/f3/89PT3/NTU1/z09Pf/x8fH/PT09/zU1Nf89PT3/5ubm/zw8PP81NTX/PT09/+fn
        5//p6en/PT09/zY2Nv89PT3/5ubm/7+/v/8/Pz8BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACLi4sA4ODg/0ZGRv9BQUH/R0dH//Ly8v9HR0f/QUFB/0ZGRv/o6Oj/RkZG/0FB
        Qf9HR0f/6enp/+rq6v9GRkb/QUFB/0dHR//n5+f/wcHB/z8/PwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIyMjADh4eH/7Ozs//Dw8P/y8vL/8/Pz//Hx8f/u7u7/6+vr/+rq
        6v/q6ur/6urq/+rq6v/q6ur/6+vr/+3t7f/w8PD/8fHx/+np6f/Dw8P/Pz8/AQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjo6OAODg4P+2trb/wcHB/8zMzP/MzMz/x8fH/729
        vf+xsbH/qqqq/6ioqP+oqKj/qKio/6ioqP+pqan/srKy/8HBwf/FxcX/3t7e/8XFxf8/Pz8BAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQkJAAwMDA/3Fxcf9/hoL/hY2J/4WN
        if+AiIT/eH97/2x0cP9kbGj/Ympm/2JqZv9iamb/Ympm/2NrZ/9qcm7/eYF9/4qMi/+vr6//yMjI/z8/
        PwEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJGRkQDAwMD/R0dH/6zI
        uP+qxrb/qsa2/6vGt/+oxLT/qMS0/6jEtP+qxrb/qcW1/6nFtf+hu6z/k6ud/5u1p/+Tq53/Z21p/62t
        rf/Jycn/Pz8/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlJSUAMHB
        wf9DQ0P/qMGy/6fAsf+nwLL/qcGz/6a/sP+kva7/obys/566qf+Zt6X/jKaX/42nmP+TrZ7/l6+h/4+l
        mP9eZWH/rKys/8zMzP8/Pz8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACXl5cAwcHB/0NDQ/+rwbT/rMK1/63Ctf+uxLf/rcK2/6/Et/+vw7f/sca5/6zCtf+dtab/kKyb/36a
        if+Go5L/hZ+P/11jX/+oqKj/0tLS/z8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJSUlADHx8f/Xl5e/2VlZf9zc3P/dHR0/25ubv9nZ2f/XV1d/1FRUf9JSUn/SEhI/0hI
        SP9ISEj/SEhI/0hISP9NTU3/XV1d/6+vr//R0dH/Dw8PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAjo6OAM7Ozv/S0tL/1dXV/9bW1v/U1NT/0NDQ/8vLy//Hx8f/wcHB/76+
        vv+/v7//wMDA/8PDw//FxcX/yMjI/8zMzP/R0dH/1tbW/9PT0/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiIiIAX19f/2FhYf9hYWH/YWFh/2BgYP9eXl7/XFxc/1lZ
        Wf9XV1f/VlZW/1dXV/9YWFj/WVlZ/1tbW/9cXFz/Xl5e/2JiYv9nZ2f/PDw8/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/AAAD/gAAA/4AAAP/AAAH/4AAD/+AAA//gAAP/4AAD/+AAA//gAAP/4A
        AD/+AAA//gAAP/4AAD/+AAA//gAAP/4AAD/+AAAf/gAAH/4AAB/+AAAf/gAAH/4AAB/+AAAf/gAAH/4A
        AB/+AAA//gAAP/4AAD/+AAA//gAAP/////8=
</value>
  </data>
</root>